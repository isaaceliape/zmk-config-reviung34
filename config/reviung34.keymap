/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define SYMNUM 1
#define NAVFN 2
#define CONFIG 3

&mt { tapping-term-ms = <165>; };

/ {
    macros {
        ZMK_MACRO(save,

        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&macro_tap &kp ESC &kp COLON &kp W &kp RET>;

        );
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------------
            // |  Q       |  W        |  F       |  P         | B    | J     | L           | U          |  W      |  V      |
            // | LGUI(C)  | LALT(I)   | LSHFT(E) | LCTRL(A)   |      | M     | RCTRL(H)    | RSHFT(E)   | RALT(S) | RGUI(N) |
            // | G        | X         | J        | K          |      | K     | H           | COMMA      | F       | P       |
            //                        | RET      | NAV(SPC)   |      |       | SYM(BSPC)   | CONF(ESC)  |

            bindings = <
&kp Q        &kp W       &kp F       &kp P            &kp B         &kp J        &kp L       &kp U       &kp Y            &kp BACKSPACE
&mt LCTRL A  &kp R       &mt LALT S  &mt LGUI T       &kp G         &kp M        &mt RGUI N  &mt RALT E  &kp I            &mt RCTRL O
&mt LSHFT Z  &mt RGUI X  &kp C       &kp D            &kp V         &kp K        &kp H       &kp COMMA   &mt RGUI PERIOD  &mt LSHIFT ENTER
                                     &mt LALT ESCAPE  &mt LGUI TAB  &lt 1 SPACE  &mo 3
            >;
        };

        symnum_layer {
            // -------------------------------------------------------------------------------------------
            // |         |  `      |  \       |  /       |   |  1        |  2        |  3      |  4      |
            // | LGUI(') | LALT(-) | LSHFT(,) | LCTRL(.) |   | RCTRL(5)  | RSHFT(6)  | RALT(7) | RGUI(8) |
            // | =       | ;       | [        | ]        |   | 9         | 0         | Z       | Q       |
            //                     | SAVE     | TAB      |   |           |           |

            bindings = <
&kp N1       &kp N2    &kp N3        &kp N4        &kp N5  &kp N6  &kp N7        &kp N8        &kp N9    &kp N0
&mt LSHFT P  &kp LBKT  &kp LS(LBRC)  &kp LS(LPAR)  &none   &none   &kp LS(RPAR)  &kp LS(RBRC)  &kp RBKT  &mt RGUI N8
&trans       &trans    &trans        &trans        &none   &none   &kp N9        &kp N0        &kp Z     &mt LSHFT QUESTION
                                     &trans        &trans  &trans  &trans
            >;
        };

        navfn_layer {
            // -------------------------------------------------------------------------------------------
            // |         |         |          |          |   | F1        | F2        | F3      | F4      |
            // | LGUI(LFT) | LALT(DWN) | LSHFT(UP) | LCTRL(RGT) |   | RCTRL(F5)  | RSHFT(F6)  | RALT(F7) | RGUI(F8) |
            // | HOME       | PGDN       | PGUP        | END        |   | F9         | F10         | F11       | F12       |
            //                     |          |          |   | DEL       |           |

            bindings = <
&none          &none          &none         &none            &none   &none    &kp F1        &kp F2        &kp F3       &kp F4
&mt LGUI LEFT  &mt LALT DOWN  &mt LSHFT UP  &mt LCTRL RIGHT  &none   &none    &mt RCTRL F5  &mt RSHFT F6  &mt RALT F7  &mt RGUI F8
&kp HOME       &kp PG_DN      &kp PG_UP     &kp END          &none   &none    &kp F9        &kp F10       &kp F11      &kp F12
                                            &none            &trans  &kp DEL  &caps_word
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp UP    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans
                        &trans  &trans  &trans  &trans
            >;
        };
    };
};
